version: '3.8'

services:
  # ============================================
  # PostgreSQL + pgvector
  # ============================================
  postgres:
    image: pgvector/pgvector:pg16
    container_name: skyro-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-skyro}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-skyro_secure_pass}
      POSTGRES_DB: ${POSTGRES_DB:-skyro_knowledge}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-skyro}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - skyro-network
    restart: unless-stopped

  # ============================================
  # Backend (FastAPI + LangGraph)
  # ============================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: skyro-backend
    environment:
      # Database
      DATABASE_URL: postgresql://${POSTGRES_USER:-skyro}:${POSTGRES_PASSWORD:-skyro_secure_pass}@postgres:5432/${POSTGRES_DB:-skyro_knowledge}

      # LLM API Keys
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}

      # Embeddings
      EMBEDDING_MODEL: ${EMBEDDING_MODEL:-text-embedding-3-small}
      EMBEDDING_DIMENSION: ${EMBEDDING_DIMENSION:-1536}

      # LLM
      LLM_PROVIDER: ${LLM_PROVIDER:-openai}
      LLM_MODEL: ${LLM_MODEL:-gpt-4-turbo-preview}
      LLM_TEMPERATURE: ${LLM_TEMPERATURE:-0.1}
      LLM_MAX_TOKENS: ${LLM_MAX_TOKENS:-2000}

      # App settings
      ENVIRONMENT: ${ENVIRONMENT:-development}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      AUTO_INGEST_ON_STARTUP: ${AUTO_INGEST_ON_STARTUP:-true}

    ports:
      - "8000:8000"
    volumes:
      - ./data/documents:/app/data/documents:ro
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - skyro-network
    restart: unless-stopped

  # ============================================
  # Frontend (Streamlit)
  # ============================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: skyro-frontend
    environment:
      BACKEND_URL: http://backend:8000
      STREAMLIT_SERVER_PORT: 8501
      STREAMLIT_SERVER_ADDRESS: 0.0.0.0
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - skyro-network
    restart: unless-stopped

networks:
  skyro-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
